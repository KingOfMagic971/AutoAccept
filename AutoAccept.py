# -*- coding: utf-8 -*-
# meta developer: @Rezoxss
# scope: hikka_only

from .. import loader, utils
import logging
from telethon.tl.types import Message, ChannelParticipantsAdmins
from telethon.tl.functions.messages import HideChatJoinRequestRequest

logger = logging.getLogger(__name__)

@loader.tds
class AutoAcceptMod(loader.Module):
    """–ú–æ–¥—É–ª—å –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø—Ä–∏–Ω—è—Ç–∏—è –∑–∞—è–≤–æ–∫ –≤ —á–∞—Ç–∞—Ö"""
    
    strings = {
        "name": "AutoAccept",
        "no_admin": "<b>üö´ –ü—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω—ã</b>",
        "enabled": "<b>‚úÖ –ê–≤—Ç–æ–ø—Ä–∏–Ω—è—Ç–∏–µ –∑–∞—è–≤–æ–∫ –≤–∫–ª—é—á–µ–Ω–æ</b>",
        "disabled": "<b>‚ùå –ê–≤—Ç–æ–ø—Ä–∏–Ω—è—Ç–∏–µ –∑–∞—è–≤–æ–∫ –æ—Ç–∫–ª—é—á–µ–Ω–æ</b>",
        "already_enabled": "<b>‚ö†Ô∏è –ê–≤—Ç–æ–ø—Ä–∏–Ω—è—Ç–∏–µ —É–∂–µ –≤–∫–ª—é—á–µ–Ω–æ</b>",
        "already_disabled": "<b>‚ö†Ô∏è –ê–≤—Ç–æ–ø—Ä–∏–Ω—è—Ç–∏–µ —É–∂–µ –æ—Ç–∫–ª—é—á–µ–Ω–æ</b>",
        "no_rights": "<b>üö´ –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞—è–≤–∫–∞–º–∏</b>"
    }

    def __init__(self):
        self.active_chats = set()

    async def client_ready(self, client, db):
        self._client = client

    async def can_manage_join_requests(self, chat_id: int) -> bool:
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –º–æ–∂–µ—Ç –ª–∏ –±–æ—Ç —É–ø—Ä–∞–≤–ª—è—Ç—å –∑–∞—è–≤–∫–∞–º–∏"""
        try:
            # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —á–∞—Ç–µ
            chat = await self._client.get_entity(chat_id)
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —á–∞—Ç —Å—É–ø–µ—Ä–≥—Ä—É–ø–ø–æ–π —Å –∑–∞—è–≤–∫–∞–º–∏
            if hasattr(chat, 'join_request'):
                return True
                
            # –î–ª—è –∫–∞–Ω–∞–ª–æ–≤ –ø—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞
            if hasattr(chat, 'default_banned_rights'):
                # –ü—Ä–∞–≤–æ –Ω–∞ –æ–¥–æ–±—Ä–µ–Ω–∏–µ –∑–∞—è–≤–æ–∫
                return not chat.default_banned_rights.invite_users
                
            return False
            
        except Exception as e:
            logger.error(f"Rights check error: {e}")
            return False

    @loader.command()
    async def autoadd(self, message):
        """–í–∫–ª—é—á–∏—Ç—å/–≤—ã–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ–ø—Ä–∏–Ω—è—Ç–∏–µ –∑–∞—è–≤–æ–∫ - .autoadd on/off"""
        chat_id = utils.get_chat_id(message)
        
        args = utils.get_args_raw(message).lower()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –Ω–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞—è–≤–∫–∞–º–∏
        if not await self.can_manage_join_requests(chat_id):
            await utils.answer(message, self.strings("no_rights"))
            return
        
        if args == "on":
            if chat_id in self.active_chats:
                await utils.answer(message, self.strings("already_enabled"))
            else:
                self.active_chats.add(chat_id)
                await utils.answer(message, self.strings("enabled"))
                logger.info(f"‚úÖ –ê–≤—Ç–æ–ø—Ä–∏–Ω—è—Ç–∏–µ –≤–∫–ª—é—á–µ–Ω–æ –≤ —á–∞—Ç–µ {chat_id}")
                
        elif args == "off":
            if chat_id not in self.active_chats:
                await utils.answer(message, self.strings("already_disabled"))
            else:
                self.active_chats.discard(chat_id)
                await utils.answer(message, self.strings("disabled"))
                logger.info(f"‚ùå –ê–≤—Ç–æ–ø—Ä–∏–Ω—è—Ç–∏–µ –≤—ã–∫–ª—é—á–µ–Ω–æ –≤ —á–∞—Ç–µ {chat_id}")
                
        else:
            status = "‚úÖ –í–∫–ª—é—á–µ–Ω–æ" if chat_id in self.active_chats else "‚ùå –í—ã–∫–ª—é—á–µ–Ω–æ"
            help_text = (
                f"<b>‚öôÔ∏è –°—Ç–∞—Ç—É—Å –∞–≤—Ç–æ–ø—Ä–∏–Ω—è—Ç–∏—è –≤ —ç—Ç–æ–º —á–∞—Ç–µ:</b> {status}\n\n"
                "<b>üìã –ö–æ–º–∞–Ω–¥—ã:</b>\n"
                "<code>.autoadd on</code> - –í–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ–ø—Ä–∏–Ω—è—Ç–∏–µ\n"
                "<code>.autoadd off</code> - –í—ã–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ–ø—Ä–∏–Ω—è—Ç–∏–µ\n\n"
                "<b>üí° –ú–æ–¥—É–ª—å —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ —ç—Ç–æ–º —á–∞—Ç–µ!</b>"
            )
            await utils.answer(message, help_text)

    @loader.watcher()
    async def join_request_watcher(self, message):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞—è–≤–æ–∫ –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ"""
        try:
            chat_id = utils.get_chat_id(message)
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∞–∫—Ç–∏–≤–Ω–æ –ª–∏ –∞–≤—Ç–æ–ø—Ä–∏–Ω—è—Ç–∏–µ –¥–ª—è —ç—Ç–æ–≥–æ —á–∞—Ç–∞
            if chat_id not in self.active_chats:
                return
                
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ –∑–∞—è–≤–∫–∞ –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ
            if hasattr(message, 'action') and message.action:
                action_class = message.action.__class__.__name__
                
                if action_class == 'MessageActionChatJoinRequest':
                    user_id = message.action.user_id
                    
                    try:
                        # –ü—Ä–∏–Ω–∏–º–∞–µ–º –∑–∞—è–≤–∫—É
                        await self._client(HideChatJoinRequestRequest(
                            peer=chat_id,
                            user_id=user_id,
                            approved=True
                        ))
                        
                        logger.info(f"‚úÖ –ü—Ä–∏–Ω—è—Ç–∞ –∑–∞—è–≤–∫–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id} –≤ —á–∞—Ç–µ {chat_id}")
                        
                        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ —á–∞—Ç
                        try:
                            user = await self._client.get_entity(user_id)
                            username = f"@{user.username}" if user.username else user.first_name
                            await message.reply(f"<b>üëã –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏–Ω—è—Ç–∞ –∑–∞—è–≤–∫–∞ –æ—Ç {username}</b>")
                        except:
                            await message.reply(f"<b>üëã –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏–Ω—è—Ç–∞ –∑–∞—è–≤–∫–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}</b>")
                            
                    except Exception as e:
                        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏–Ω—è—Ç–∏—è –∑–∞—è–≤–∫–∏: {e}")
                        
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ –∑–∞—è–≤–æ–∫: {e}")

    async def on_unload(self):
        """–û—á–∏—Å—Ç–∫–∞ –ø—Ä–∏ –≤—ã–≥—Ä—É–∑–∫–µ –º–æ–¥—É–ª—è"""
        self.active_chats.clear()
        logger.info("üßπ –ú–æ–¥—É–ª—å AutoAccept –≤—ã–≥—Ä—É–∂–µ–Ω, –≤—Å–µ —á–∞—Ç—ã –æ—á–∏—â–µ–Ω—ã")